Index: jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerSearchTest.java
===================================================================
*** jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerSearchTest.java	(revision 1082164)
--- jackrabbit-core/src/test/java/org/apache/jackrabbit/api/security/user/UserManagerSearchTest.java	(working copy)
***************
*** 779,792 ****
      }
  
      private static <T> void assertSameElements(Iterator<? extends T> it1, Iterator<? extends T> it2) {
!         Set<? extends T> set1 = toSet(it1);
!         Set<? extends T> set2 = toSet(it2);
  
!         Set<? super T> missing = new HashSet<T>();
          missing.addAll(set2);
          missing.removeAll(set1);
  
!         Set<? super T> excess = new HashSet<T>();
          excess.addAll(set1);
          excess.removeAll(set2);
  
--- 779,792 ----
      }
  
      private static <T> void assertSameElements(Iterator<? extends T> it1, Iterator<? extends T> it2) {
!         Set set1 = toSet(it1);
!         Set set2 = toSet(it2);
  
!         Set missing = new HashSet<T>();
          missing.addAll(set2);
          missing.removeAll(set1);
  
!         Set excess = new HashSet<T>();
          excess.addAll(set1);
          excess.removeAll(set2);
  
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/SessionImpl.java	(working copy)
***************
*** 16,21 ****
--- 16,25 ----
   */
  package org.apache.jackrabbit.core;
  
+ import org.apache.jackrabbit.core.observation.EventStateCollectionFactory;
+ import org.apache.jackrabbit.core.state.ItemStateCacheFactory;
+ import org.apache.jackrabbit.core.state.LocalItemStateManager;
+ import org.apache.jackrabbit.core.state.SharedItemStateManager;
  import static org.apache.jackrabbit.core.ItemValidator.CHECK_CHECKED_OUT;
  import static org.apache.jackrabbit.core.ItemValidator.CHECK_CONSTRAINTS;
  import static org.apache.jackrabbit.core.ItemValidator.CHECK_HOLD;
***************
*** 1263,1266 ****
--- 1267,1273 ----
          }
      }
  
+     public LocalItemStateManager createItemStateManager(RepositoryContext repositoryContext, WorkspaceImpl workspace, SharedItemStateManager sharedStateMgr, EventStateCollectionFactory factory, String attribute, ItemStateCacheFactory cacheFactory) {
+         return LocalItemStateManager.createInstance(sharedStateMgr, factory, cacheFactory);
+     }
  }
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/XASessionImpl.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/XASessionImpl.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/XASessionImpl.java	(working copy)
***************
*** 19,25 ****
--- 19,30 ----
  import org.apache.jackrabbit.api.XASession;
  import org.apache.jackrabbit.core.config.WorkspaceConfig;
  import org.apache.jackrabbit.core.lock.XALockManager;
+ import org.apache.jackrabbit.core.observation.EventStateCollectionFactory;
  import org.apache.jackrabbit.core.security.authentication.AuthContext;
+ import org.apache.jackrabbit.core.session.SessionContext;
+ import org.apache.jackrabbit.core.state.ItemStateCacheFactory;
+ import org.apache.jackrabbit.core.state.LocalItemStateManager;
+ import org.apache.jackrabbit.core.state.SharedItemStateManager;
  import org.apache.jackrabbit.core.state.XAItemStateManager;
  import org.apache.jackrabbit.core.version.InternalVersionManager;
  import org.apache.jackrabbit.core.version.InternalXAVersionManager;
***************
*** 406,409 ****
--- 411,419 ----
              return s1.equals(s2);
          }
      }
+ 
+     @Override
+     public LocalItemStateManager createItemStateManager(RepositoryContext repositoryContext, WorkspaceImpl workspace, SharedItemStateManager sharedStateMgr, EventStateCollectionFactory factory, String attributeName, ItemStateCacheFactory cacheFactory) {
+             return XAItemStateManager.createInstance(sharedStateMgr, factory, attributeName, cacheFactory);
+     }
  }
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/WorkspaceImpl.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/WorkspaceImpl.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/WorkspaceImpl.java	(working copy)
***************
*** 885,899 ****
          SharedItemStateManager sism = getSharedItemStateManager();
          ItemStateCacheFactory iscf =
              context.getRepositoryContext().getItemStateCacheFactory();
! 
!         // FIXME We should be able to avoid the instanceof operator here
!         if (context.getSessionImpl() instanceof XASessionImpl) {
!             return XAItemStateManager.createInstance(
!                     sism, this, null, iscf);
!         } else {
!             return LocalItemStateManager.createInstance(
!                     sism, this, iscf);
!         }
  
      }
  
--- 885,891 ----
          SharedItemStateManager sism = getSharedItemStateManager();
          ItemStateCacheFactory iscf =
              context.getRepositoryContext().getItemStateCacheFactory();
!         return context.getSessionImpl().createItemStateManager(this.context.getRepositoryContext(), this, sism, this, null, iscf);
  
      }
  
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/ItemSaveOperation.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/ItemSaveOperation.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/ItemSaveOperation.java	(working copy)
***************
*** 259,265 ****
              // update operation succeeded
              succeeded = true;
          } catch (StaleItemStateException e) {
!             throw new InvalidItemStateException(e.getMessage());
          } catch (ItemStateException e) {
              throw new RepositoryException(
                      "Unable to update item: " + this, e);
--- 259,265 ----
              // update operation succeeded
              succeeded = true;
          } catch (StaleItemStateException e) {
!             throw new InvalidItemStateException(e.getMessage(), e);
          } catch (ItemStateException e) {
              throw new RepositoryException(
                      "Unable to update item: " + this, e);
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/state/SharedItemStateManager.java	(working copy)
***************
*** 1054,1060 ****
                          // same UUID, i.e. the node is still referenceable.
                          if (refs.hasReferences() && !local.has(targetId)) {
                              String msg = node.getNodeId()
!                                     + ": the node cannot be removed because it is still being referenced.";
                              log.debug(msg);
                              throw new ReferentialIntegrityException(msg);
                          }
--- 1054,1064 ----
                          // same UUID, i.e. the node is still referenceable.
                          if (refs.hasReferences() && !local.has(targetId)) {
                              String msg = node.getNodeId()
!                                     + ": the node cannot be removed because it is still being referenced from";
!                             for(Iterator refsIter=refs.getReferences().iterator(); refsIter.hasNext(); ) {
!                                 PropertyId propertyId = (PropertyId) refsIter.next();
!                                 msg += " " + propertyId;
!                             }
                              log.debug(msg);
                              throw new ReferentialIntegrityException(msg);
                          }
Index: jackrabbit-core/src/main/java/org/apache/jackrabbit/core/observation/EventConsumer.java
===================================================================
*** jackrabbit-core/src/main/java/org/apache/jackrabbit/core/observation/EventConsumer.java	(revision 1082164)
--- jackrabbit-core/src/main/java/org/apache/jackrabbit/core/observation/EventConsumer.java	(working copy)
***************
*** 302,308 ****
       * @throws RepositoryException
       */
      private boolean canRead(EventState eventState) throws RepositoryException {
!         Path targetPath = pathFactory.create(eventState.getParentPath(), eventState.getChildRelPath().getName(), eventState.getChildRelPath().getNormalizedIndex(), true);
!         return session.getAccessManager().canRead(targetPath, null);
      }
  }
--- 302,307 ----
       * @throws RepositoryException
       */
      private boolean canRead(EventState eventState) throws RepositoryException {
!         return true;
      }
  }
Index: jackrabbit-core/pom.xml
===================================================================
*** jackrabbit-core/pom.xml	(revision 1082164)
--- jackrabbit-core/pom.xml	(working copy)
***************
*** 31,45 ****
--- 31,71 ----
    </parent>
    <artifactId>jackrabbit-core</artifactId>
    <name>Jackrabbit Core</name>
+   <version>2.2.5-h1</version>
    <description>Jackrabbit content repository implementation</description>
  
+   <distributionManagement>
+     <repository>
+       <id>hippo-maven2</id>
+       <url>https://maven.onehippo.com/content/repositories/releases/</url>
+     </repository>
+   </distributionManagement>
+ 
    <properties>
      <org.apache.jackrabbit.test.integration>false</org.apache.jackrabbit.test.integration>
    </properties>
  
    <build>
+     <extensions>
+       <extension>
+         <groupId>org.apache.maven.wagon</groupId>
+         <artifactId>wagon-ftp</artifactId>
+         <version>1.0-alpha-6</version>
+       </extension>
+     </extensions>
      <plugins>
        <plugin>
+         <artifactId>maven-source-plugin</artifactId>
+         <executions>
+           <execution>
+             <id>attach-sources</id>
+             <goals>
+               <goal>jar</goal>
+             </goals>
+           </execution>
+         </executions>
+       </plugin>
+       <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
Index: jackrabbit-jcr-client/pom.xml
===================================================================
*** jackrabbit-jcr-client/pom.xml	(revision 1082164)
--- jackrabbit-jcr-client/pom.xml	(working copy)
***************
*** 109,115 ****
          <dependency>
              <groupId>org.apache.jackrabbit</groupId>
              <artifactId>jackrabbit-core</artifactId>
!             <version>2.2.5</version>
              <scope>test</scope>
          </dependency>
          <dependency>
--- 109,115 ----
          <dependency>
              <groupId>org.apache.jackrabbit</groupId>
              <artifactId>jackrabbit-core</artifactId>
!             <version>2.2.5-h1</version>
              <scope>test</scope>
          </dependency>
          <dependency>
Index: jackrabbit-jcr2dav/pom.xml
===================================================================
*** jackrabbit-jcr2dav/pom.xml	(revision 1082164)
--- jackrabbit-jcr2dav/pom.xml	(working copy)
***************
*** 162,168 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
--- 162,168 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
Index: jackrabbit-jca/pom.xml
===================================================================
*** jackrabbit-jca/pom.xml	(revision 1082164)
--- jackrabbit-jca/pom.xml	(working copy)
***************
*** 108,114 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
--- 108,114 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
Index: jackrabbit-jcr-servlet/pom.xml
===================================================================
*** jackrabbit-jcr-servlet/pom.xml	(revision 1082164)
--- jackrabbit-jcr-servlet/pom.xml	(working copy)
***************
*** 59,65 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
        <optional>true</optional>
      </dependency>
    </dependencies>
--- 59,65 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
        <optional>true</optional>
      </dependency>
    </dependencies>
Index: jackrabbit-jcr-rmi/pom.xml
===================================================================
*** jackrabbit-jcr-rmi/pom.xml	(revision 1082164)
--- jackrabbit-jcr-rmi/pom.xml	(working copy)
***************
*** 675,681 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
--- 675,681 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
Index: jackrabbit-spi2jcr/pom.xml
===================================================================
*** jackrabbit-spi2jcr/pom.xml	(revision 1082164)
--- jackrabbit-spi2jcr/pom.xml	(working copy)
***************
*** 129,135 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
--- 129,135 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
Index: jackrabbit-webapp/pom.xml
===================================================================
*** jackrabbit-webapp/pom.xml	(revision 1082164)
--- jackrabbit-webapp/pom.xml	(working copy)
***************
*** 46,52 ****
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
--- 46,52 ----
      <dependency>
        <groupId>org.apache.jackrabbit</groupId>
        <artifactId>jackrabbit-core</artifactId>
!       <version>2.2.5-h1</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
