<?xml version="1.0" encoding="UTF-8"?>
<sv:node sv:name="HippoTranslationToDisplayName" xmlns:sv="http://www.jcp.org/jcr/sv/1.0">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:updaterinfo</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:batchsize" sv:type="Long">
    <sv:value>10</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:description" sv:type="String">
    <sv:value>Changes the way display names of documents and folders are stored from the old model based on hippo:translated node type to the new model based on hippo:named node type.</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
    <sv:value>false</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:parameters" sv:type="String">
    <sv:value/>
  </sv:property>
  <sv:property sv:name="hipposys:query" sv:type="String">
    <sv:value>//element(*, hippo:translated)</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:script" sv:type="String">
    <sv:value>package org.hippoecm.frontend.plugins.cms.admin.updater&#xd;
&#xd;
import org.onehippo.repository.update.BaseNodeUpdateVisitor&#xd;
import javax.jcr.Node&#xd;
import org.hippoecm.repository.util.NodeIterable&#xd;
import java.util.Locale;&#xd;
&#xd;
class UpdaterTemplate extends BaseNodeUpdateVisitor {&#xd;
&#xd;
  boolean doUpdate(Node node) {&#xd;
    if (node.isNodeType("hippostd:folder") || node.isNodeType("hippostd:directory") || node.isNodeType("hippo:handle")) {&#xd;
      String language = findLanguage(node);&#xd;
      String displayName = findTranslation(node, language);&#xd;
      if (displayName != null) {&#xd;
        setDisplayName(node, displayName)&#xd;
      }&#xd;
      removeTranslations(node);&#xd;
      return true;&#xd;
    }&#xd;
    return false&#xd;
  }&#xd;
&#xd;
  String findLanguage(Node node) {&#xd;
    if (node.isNodeType("hippotranslation:translated")) {&#xd;
      return node.getProperty("hippotranslation:locale").getString();&#xd;
    }&#xd;
    if (node.getPath().equals("/")) {&#xd;
      return null;&#xd;
    }&#xd;
    return findLanguage(node.getParent())&#xd;
  }&#xd;
  &#xd;
  String findTranslation(Node node, String nodeLanguage) {&#xd;
    String defaultLanguage = Locale.getDefault().getLanguage();&#xd;
    String emptyLanguageName = null, nodeLanguageName = null, defaultLanguageName = null;&#xd;
    for (Node translation : new NodeIterable(node.getNodes("hippo:translation"))) {&#xd;
      String language = translation.getProperty("hippo:language").getString();&#xd;
      String message = translation.getProperty("hippo:message").getString();&#xd;
      if (emptyLanguageName == null &amp;&amp; language.isEmpty()) {&#xd;
        emptyLanguageName = message;&#xd;
      }&#xd;
      if (nodeLanguageName == null &amp;&amp; language.equals(nodeLanguage)) {&#xd;
        nodeLanguageName = message;&#xd;
      }&#xd;
      if (defaultLanguageName == null &amp;&amp; language.equals(defaultLanguage)) {&#xd;
        defaultLanguageName = message;&#xd;
      }&#xd;
    }&#xd;
    return emptyLanguageName != null ? emptyLanguageName : nodeLanguageName != null ? nodeLanguageName : defaultLanguageName;&#xd;
  }&#xd;
  &#xd;
  void setDisplayName(Node node, String displayName) {&#xd;
    node.addMixin("hippo:named");&#xd;
    node.setProperty("hippo:name", displayName)&#xd;
  }&#xd;
  &#xd;
  void removeTranslations(Node node) {&#xd;
    for (Node translation : new NodeIterable(node.getNodes("hippo:translation"))) {&#xd;
      translation.remove();&#xd;
    }&#xd;
    node.removeMixin("hippo:translated")&#xd;
  }&#xd;
  &#xd;
  boolean undoUpdate(Node node) {&#xd;
    throw new UnsupportedOperationException('Updater does not implement undoUpdate method')&#xd;
  }&#xd;
&#xd;
}</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:throttle" sv:type="Long">
    <sv:value>1000</sv:value>
  </sv:property>
</sv:node>
