<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright 2013 Hippo B.V. (http://www.onehippo.com)

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<scxml version="1.0"
       xmlns="http://www.w3.org/2005/07/scxml"
       xmlns:hippo="http://www.onehippo.org/cms7/repository/scxml"
       initial="handle">

  <parallel id="handle">

    <state id="edit" initial="init-edit">

      <state id="init-edit">
        <transition target="not-editable"
                    cond="!(dm.sf.document or dm.sf.unlock) or !empty(dm.r) or !empty(dm.rr)"/>
        <transition target="editing"
                    cond="!empty(dm.d) and !empty(dm.d.holder)"/>
        <transition target="editable"/>
      </state>

      <state id="not-editable"/>

      <state id="editing">
        <onentry>
          <if cond="dm.sf.document">
            <if cond="dm.ss=='draft' and dm.d.holder==dm.user">
              <hippo:hint hint="disposeEditableInstance" value="true"/>
              <hippo:hint hint="obtainEditableInstance" value="true"/>
              <hippo:hint hint="commitEditableInstance" value="true"/>
              <else/>
              <hippo:hint hint="obtainEditableInstance" value="false"/>
            </if>
          </if>
          <if cond="dm.sf.unlock">
            <if cond="dm.ss=='draft' and (dm.d.holder==dm.user or dm.pm('hippo:admin'))">
              <hippo:hint hint="unlock" value="true"/>
              <else/>
              <hippo:hint hint="unlock" value="false"/>
            </if>
          </if>
        </onentry>
      </state>

      <state id="editable">
        <onentry>
          <if cond="dm.sf.document">
            <if cond="dm.ss=='unpublished' or (dm.ss=='draft' and empty(dm.u)) or dm.s=='p'">
              <hippo:hint hint="obtainEditableInstance" value="true"/>
              <else/>
              <hippo:hint hint="obtainEditableInstance" value="false"/>
            </if>
          </if>
          <if cond="dm.sf.unlock">
            <hippo:hint hint="unlock" value="false"/>
          </if>
        </onentry>
      </state>

    </state>

    <state id="request" initial="init-request">

      <state id="init-request">
        <transition target="requested"
                    cond="!empty(dm.r)"/>
        <transition target="request-rejected"
                    cond="!empty(dm.rr)"/>
        <transition target="not-requested"/>
      </state>

      <state id="request-rejected">
        <onentry>
          <if cond="dm.sf.request">
            <hippo:hint hint="acceptRequest" value="false"/>
            <hippo:hint hint="rejectRequest" value="false"/>
            <if cond="(!empty(dm.rr.owner) and dm.rr.owner==dm.user) or dm.pm('hippo:editor')">
              <hippo:hint hint="cancelRequest" value="true"/>
              <else/>
              <hippo:hint hint="cancelRequest" value="false"/>
            </if>
          </if>
        </onentry>
      </state>

      <state id="requested">
        <onentry>
          <if cond="dm.sf.request">
            <if cond="!empty(dm.r.owner) and dm.r.owner==dm.user">
              <hippo:hint hint="cancelRequest" value="true"/>
              <else/>
              <hippo:hint hint="cancelRequest" value="false"/>
            </if>
            <if cond="dm.pm('hippo:editor')">
              <hippo:hint hint="acceptRequest" value="true"/>
              <if cond="!empty(dm.r.owner) and dm.r.owner==dm.user">
                <hippo:hint hint="rejectRequest" value="false"/>
                <else/>
                <hippo:hint hint="rejectRequest" value="true"/>
              </if>
            </if>
          </if>
        </onentry>
      </state>

      <state id="not-requested"/>

    </state>

    <state id="publish" initial="init-publish">

      <state id="init-publish">
        <transition target="not-publishable"/>
      </state>

      <state id="not-publishable"/>
      <state id="publishable"/>

    </state>

    <state id="depublish" initial="init-depublish">

      <state id="init-depublish">
        <transition target="not-depublishable"/>
      </state>

      <state id="not-depublishable"/>
      <state id="depublishable"/>

    </state>

    <state id="version" initial="init-version">

      <state id="init-version">
        <transition target="not-versionable"/>
      </state>

      <state id="versionable"/>
      <state id="versioned"/>
      <state id="not-versionable"/>

    </state>

    <state id="terminate" initial="init-terminate">

      <state id="init-terminate">
        <transition target="not-terminateable"/>
      </state>

      <state id="not-terminateable"/>
      <state id="terminateable"/>

    </state>

    <state id="copy" initial="init-copy">

      <state id="init-copy">
        <transition target="not-copyable"/>
      </state>

      <state id="not-copyable"/>
      <state id="copyable"/>

    </state>

  </parallel>

  <final id="terminated" />

</scxml>
